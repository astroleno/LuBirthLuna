import{c as h,b as d,M as c,P as p,E as m,a as g}from"./index-d3XrTYz9.js";class x{static verifyBirthPointMapping(e,t){const a=[],{p:o}=h(e,t),i=this.getExpectedRegion(e,t),n=this.getRegionFromWorldCoord(o);Math.abs(o.length()-1)>.001&&a.push(`世界坐标不是单位向量: ${o.length().toFixed(4)}`);const s=Math.sin(c.degToRad(t));return Math.abs(o.y-s)>.001&&a.push(`Y轴纬度映射错误: 期望 ${s.toFixed(4)}, 实际 ${o.y.toFixed(4)}`),i!==n&&a.push(`区域映射错误: 期望 ${i}, 实际 ${n}`),{isValid:a.length===0,errors:a,worldCoord:o,expectedRegion:i,actualRegion:n}}static verifyCameraAlignment(e,t,a=15){const o=[],i=d({longitudeDeg:e,latitudeDeg:t,alphaDeg:10});Math.abs(i.yaw)>180&&o.push(`Yaw角度超出范围: ${i.yaw.toFixed(2)}°`),Math.abs(i.pitch)>90&&o.push(`Pitch角度超出范围: ${i.pitch.toFixed(2)}°`);const n=this.projectBirthPointToScreen(e,t,i,a),s=.5,r=.4,l=.15;return Math.abs(n.x-s)>l&&o.push(`出生点X位置偏离中心: ${n.x.toFixed(3)} vs ${s}`),Math.abs(n.y-r)>l&&o.push(`出生点Y位置偏离目标: ${n.y.toFixed(3)} vs ${r}`),{isValid:o.length===0,errors:o,cameraYaw:i.yaw,cameraPitch:i.pitch,birthPointScreenPos:n}}static verifyKnownLocations(){const t=[{name:"上海",lon:121.47,lat:31.23},{name:"北京",lon:116.41,lat:39.9},{name:"纽约",lon:-74.01,lat:40.71},{name:"伦敦",lon:-.13,lat:51.51},{name:"东京",lon:139.69,lat:35.69},{name:"悉尼",lon:151.21,lat:-33.87},{name:"本初子午线",lon:0,lat:0},{name:"国际日期变更线",lon:180,lat:0}].map(o=>{const i=this.verifyBirthPointMapping(o.lon,o.lat),n=this.verifyCameraAlignment(o.lon,o.lat);return{name:o.name,location:o,mappingValid:i.isValid,alignmentValid:n.isValid,errors:[...i.errors,...n.errors]}}),a=t.filter(o=>o.mappingValid&&o.alignmentValid).length;return{totalTests:t.length,passedTests:a,results:t}}static getExpectedRegion(e,t){return e>=100&&e<=140&&t>=20&&t<=50?"东亚":e>=-100&&e<=-70&&t>=25&&t<=45?"北美东部":e>=-10&&e<=20&&t>=35&&t<=60?"西欧":e>=140&&e<=180&&t>=-40&&t<=-30?"澳洲":Math.abs(e)<10&&Math.abs(t)<10?"赤道非洲":Math.abs(e-180)<10||Math.abs(e+180)<10?"太平洋":"其他地区"}static getRegionFromWorldCoord(e){const t=Math.atan2(e.x,e.z),a=Math.asin(c.clamp(e.y,-1,1)),o=c.radToDeg(t),i=c.radToDeg(a);return this.getExpectedRegion(o,i)}static projectBirthPointToScreen(e,t,a,o){const{p:i}=h(e,t),n=new p(45,1,.1,1e3);n.position.set(0,0,o);const s=new m(c.degToRad(a.pitch),c.degToRad(a.yaw),c.degToRad(a.roll),"YXZ");n.setRotationFromEuler(s),n.updateMatrixWorld();const r=i.clone().project(n);return new g((r.x+1)*.5,(1-r.y)*.5)}static runFullVerification(){console.group("🔍 坐标验证测试套件");const e=this.verifyKnownLocations();console.log(`📍 地点测试: ${e.passedTests}/${e.totalTests} 通过`),e.results.forEach(n=>{const s=n.mappingValid&&n.alignmentValid?"✅":"❌";console.log(`  ${s} ${n.name} (${n.location.lon}°, ${n.location.lat}°)`),n.errors.length>0&&n.errors.forEach(r=>console.warn(`    ⚠️ ${r}`))}),console.group("🎯 上海关键验证");const t=this.verifyBirthPointMapping(121.47,31.23),a=this.verifyCameraAlignment(121.47,31.23);console.log("映射验证:",t.isValid?"✅":"❌"),console.log("对齐验证:",a.isValid?"✅":"❌"),t.isValid||t.errors.forEach(n=>console.warn(`  映射问题: ${n}`)),a.isValid||a.errors.forEach(n=>console.warn(`  对齐问题: ${n}`)),console.log("世界坐标:",{x:+t.worldCoord.x.toFixed(4),y:+t.worldCoord.y.toFixed(4),z:+t.worldCoord.z.toFixed(4)}),console.log("相机参数:",{yaw:a.cameraYaw.toFixed(2)+"°",pitch:a.cameraPitch.toFixed(2)+"°"}),console.log("屏幕位置:",{x:a.birthPointScreenPos.x.toFixed(3),y:a.birthPointScreenPos.y.toFixed(3)}),console.groupEnd();const o=e.passedTests/e.totalTests,i=o>=.8?"🎉 优秀":o>=.6?"⚠️ 良好":"❌ 需改进";console.log(`
📊 总体验证结果: ${i} (${(o*100).toFixed(1)}%)`),console.groupEnd()}}export{x as CoordinateVerifier};
