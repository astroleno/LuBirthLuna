import{M as c,V as a,a as g}from"./index-d3XrTYz9.js";class u{static testKnownLocations(){const s=[{name:"上海",lon:121.47,lat:31.23},{name:"北京",lon:116.41,lat:39.9},{name:"纽约",lon:-74.01,lat:40.71},{name:"伦敦",lon:-.13,lat:51.51},{name:"东京",lon:139.69,lat:35.69},{name:"悉尼",lon:151.21,lat:-33.87},{name:"本初子午线",lon:0,lat:0},{name:"国际日期变更线",lon:180,lat:0}];console.group("🌍 坐标系映射测试"),s.forEach(n=>{const e=c.degToRad(n.lat),i=c.degToRad(n.lon),t=new a(Math.cos(e)*Math.sin(i),Math.sin(e),Math.cos(e)*Math.cos(i)),o=new a(0,0,15),h=this.projectToScreen(t,o);console.log(`${n.name}:`,{经度:n.lon.toFixed(2)+"°",纬度:n.lat.toFixed(2)+"°",世界坐标:{x:+t.x.toFixed(3),y:+t.y.toFixed(3),z:+t.z.toFixed(3)},屏幕坐标:{x:+h.x.toFixed(3),y:+h.y.toFixed(3)},期望位置:this.getExpectedScreenPosition(n.name)})}),console.groupEnd()}static testLongitudeFormulas(){console.group("🔄 经度计算公式测试");const s={lon:121.47,lat:31.23},n=c.degToRad(s.lat),e=c.degToRad(s.lon);[{name:"当前公式",calculate:(t,o)=>new a(Math.cos(o)*Math.sin(t),Math.sin(o),Math.cos(o)*Math.cos(t))},{name:"标准地理公式",calculate:(t,o)=>new a(Math.cos(o)*Math.cos(t),Math.sin(o),Math.cos(o)*Math.sin(t))},{name:"Z轴为0°经度",calculate:(t,o)=>new a(Math.cos(o)*Math.sin(t-Math.PI/2),Math.sin(o),Math.cos(o)*Math.cos(t-Math.PI/2))},{name:"X轴为0°经度",calculate:(t,o)=>new a(Math.cos(o)*Math.cos(t-Math.PI),Math.sin(o),Math.cos(o)*Math.sin(t-Math.PI))}].forEach(t=>{const o=t.calculate(e,n),h=this.projectToScreen(o,new a(0,0,15));console.log(`${t.name}:`,{世界坐标:{x:+o.x.toFixed(3),y:+o.y.toFixed(3),z:+o.z.toFixed(3)},屏幕坐标:{x:+h.x.toFixed(3),y:+h.y.toFixed(3)}})}),console.groupEnd()}static testCameraPositions(){console.group("📷 相机位置测试");const s={lon:121.47,lat:31.23},n=c.degToRad(s.lat),e=c.degToRad(s.lon),i=new a(Math.cos(n)*Math.sin(e),Math.sin(n),Math.cos(n)*Math.cos(e));[{name:"默认位置",position:new a(0,0,15)},{name:"左侧视角",position:new a(-10,0,10)},{name:"右侧视角",position:new a(10,0,10)},{name:"上方视角",position:new a(0,10,10)},{name:"前方视角",position:new a(0,0,20)}].forEach(o=>{const h=this.projectToScreen(i,o.position);console.log(`${o.name}:`,{相机位置:{x:+o.position.x.toFixed(1),y:+o.position.y.toFixed(1),z:+o.position.z.toFixed(1)},屏幕坐标:{x:+h.x.toFixed(3),y:+h.y.toFixed(3)}})}),console.groupEnd()}static projectToScreen(s,n){const e=s.clone().sub(n),i=e.length(),t=45*Math.PI/180,o=Math.tan(t/2)*i,h=e.x/o,l=e.y/o;return new g(h,l)}static getExpectedScreenPosition(s){return{上海:"屏幕右侧",北京:"屏幕右侧",纽约:"屏幕左侧",伦敦:"屏幕中心左侧",东京:"屏幕右侧",悉尼:"屏幕右下角",本初子午线:"屏幕中心",国际日期变更线:"屏幕左侧边缘"}[s]||"未知"}static testPhaseShift(){console.group("🔧 相位差修正测试");const s={lon:121.47,lat:31.23},n=c.degToRad(s.lat);[0,30,60,90,120,150,180].forEach(i=>{const t=c.degToRad(s.lon+i),o=new a(Math.cos(n)*Math.sin(t),Math.sin(n),Math.cos(n)*Math.cos(t)),h=this.projectToScreen(o,new a(0,0,15));console.log(`相位差 ${i}°:`,{调整后经度:(s.lon+i).toFixed(2)+"°",世界坐标:{x:+o.x.toFixed(3),y:+o.y.toFixed(3),z:+o.z.toFixed(3)},屏幕坐标:{x:+h.x.toFixed(3),y:+h.y.toFixed(3)}})}),console.groupEnd()}static runAllTests(){console.log("🚀 开始坐标系调试测试..."),this.testKnownLocations(),this.testLongitudeFormulas(),this.testCameraPositions(),this.testPhaseShift(),this.testShanghaiBirthPointIssue(),console.log("✅ 坐标系调试测试完成")}static testShanghaiBirthPointIssue(){console.group("🎯 上海出生点对齐问题分析");const s={lon:121.47,lat:31.23},n=c.degToRad(s.lat),e=c.degToRad(s.lon),i=new a(Math.cos(n)*Math.sin(e),Math.sin(n),Math.cos(n)*Math.cos(e)),t=new a(Math.cos(n)*Math.cos(e),Math.sin(n),-Math.cos(n)*Math.sin(e));console.log("上海原始坐标:",s),console.log("原始公式结果(错误):",{x:+i.x.toFixed(4),y:+i.y.toFixed(4),z:+i.z.toFixed(4)}),console.log("修复后公式结果(Three.js坐标系校正):",{x:+t.x.toFixed(4),y:+t.y.toFixed(4),z:+t.z.toFixed(4)});const o=c.radToDeg(Math.atan2(t.x,t.z)),h=c.radToDeg(Math.asin(c.clamp(t.y,-1,1)));console.log("修复后相机朝向:",{yaw:o.toFixed(2)+"°",pitch:h.toFixed(2)+"°"}),offsets.forEach(l=>{const x=c.degToRad(s.lon+l),d=new a(Math.cos(n)*Math.sin(x),Math.sin(n),Math.cos(n)*Math.cos(x)),M=c.radToDeg(Math.atan2(d.x,d.z)),r=c.radToDeg(Math.asin(c.clamp(d.y,-1,1)));console.log(`经度偏移 ${l}°:`,{调整后经度:(s.lon+l).toFixed(2)+"°",世界坐标:{x:+d.x.toFixed(4),y:+d.y.toFixed(4),z:+d.z.toFixed(4)},相机朝向:{yaw:M.toFixed(2)+"°",pitch:r.toFixed(2)+"°"},期望结果:l===0?"✓ 新坐标系校正结果":l===-52.5?"可能修正美东偏移":l===-90?"90°西移校正(旧)":"偏移测试"})}),console.groupEnd()}}export{u as CoordinateSystemDebugger};
